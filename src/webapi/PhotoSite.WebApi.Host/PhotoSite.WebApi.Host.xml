<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PhotoSite.WebApi.Host</name>
    </assembly>
    <members>
        <member name="T:PhotoSite.WebApi.Configuration.HostConfigurator">
            <summary>
            Host configurator
            </summary>
        </member>
        <member name="M:PhotoSite.WebApi.Configuration.HostConfigurator.CustomConfigureAppConfiguration(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.String)">
            <summary>
            Custom configure application's configuration
            </summary>
            <param name="hostBuilder"></param>
            <param name="basePath"></param>
            <returns></returns>
        </member>
        <member name="M:PhotoSite.WebApi.Configuration.HostConfigurator.SetupExceptionHandlers">
            <summary>
            Setup exception handlers
            </summary>
        </member>
        <member name="T:PhotoSite.WebApi.Controllers.Admin.AdminController">
            <summary>
            Admin
            </summary>
        </member>
        <member name="M:PhotoSite.WebApi.Controllers.Admin.AdminController.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{PhotoSite.WebApi.Options.CustomTokenAuthOptions},PhotoSite.ApiService.Services.Interfaces.IAdminService,AutoMapper.IMapper)">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:PhotoSite.WebApi.Controllers.Admin.AdminController.Login(PhotoSite.WebApi.Admin.Authorize.LoginDto)">
            <summary>
            Login
            </summary>
            <param name="dto"><see cref="T:PhotoSite.WebApi.Admin.Authorize.LoginDto"/></param>
            <returns>Login state</returns>
        </member>
        <member name="M:PhotoSite.WebApi.Controllers.Admin.AdminController.Logout">
            <summary>
            Logout
            </summary>
        </member>
        <member name="T:PhotoSite.WebApi.Controllers.Admin.BlackIpController">
            <summary>
            Black ip
            </summary>
        </member>
        <member name="M:PhotoSite.WebApi.Controllers.Admin.BlackIpController.#ctor(PhotoSite.ApiService.Services.Interfaces.IBlackIpService,AutoMapper.IMapper)">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:PhotoSite.WebApi.Controllers.Admin.BlackIpController.GetAll">
            <summary>
            Get all black IP's
            </summary>
            <returns>All IP's</returns>
        </member>
        <member name="M:PhotoSite.WebApi.Controllers.Admin.BlackIpController.Create(PhotoSite.WebApi.Admin.BlackIpDto)">
            <summary>
            Add new black IP
            </summary>
            <param name="blackIp">Black IP</param>
            <returns>Identification new black IP</returns>
        </member>
        <member name="M:PhotoSite.WebApi.Controllers.Admin.BlackIpController.Update(PhotoSite.WebApi.Admin.BlackIpDto)">
            <summary>
            Update black IP
            </summary>
            <param name="blackIp">Black IP</param>
        </member>
        <member name="M:PhotoSite.WebApi.Controllers.Admin.BlackIpController.Delete(System.Int32)">
            <summary>
            Delete black IP
            </summary>
            <param name="id">Black IP identification</param>
            <returns>Result</returns>
        </member>
        <member name="T:PhotoSite.WebApi.Controllers.Admin.PhotoToTagController">
            <summary>
            Photo's tags
            </summary>
        </member>
        <member name="M:PhotoSite.WebApi.Controllers.Admin.PhotoToTagController.#ctor(PhotoSite.ApiService.Services.Interfaces.IPhotoToTagService,AutoMapper.IMapper)">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:PhotoSite.WebApi.Controllers.Admin.PhotoToTagController.GetByPhotoId(PhotoSite.WebApi.Common.IdDto)">
            <summary>
            Get entities by photo's id
            </summary>
            <returns>All tags</returns>
        </member>
        <member name="M:PhotoSite.WebApi.Controllers.Admin.PhotoToTagController.GetNotExistsInPhoto(PhotoSite.WebApi.Common.IdDto)">
            <summary>
            Get tag's ids not in photo
            </summary>
            <returns>All tags</returns>
        </member>
        <member name="M:PhotoSite.WebApi.Controllers.Admin.PhotoToTagController.BindTagsToPhoto(PhotoSite.WebApi.Photo.PhotoTagsDto)">
            <summary>
            Bind tags to photo
            </summary>
        </member>
        <member name="T:PhotoSite.WebApi.Controllers.Admin.SettingController">
            <summary>
            Settings
            </summary>
        </member>
        <member name="M:PhotoSite.WebApi.Controllers.Admin.SettingController.#ctor(PhotoSite.ApiService.Services.Interfaces.ISettingService,AutoMapper.IMapper)">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:PhotoSite.WebApi.Controllers.Admin.SettingController.GetDefaultSettings">
            <summary>
            Get default settings
            </summary>
            <returns>Default settings</returns>
        </member>
        <member name="M:PhotoSite.WebApi.Controllers.Admin.SettingController.GetSettings">
            <summary>
            Get settings
            </summary>
            <returns>Settings</returns>
        </member>
        <member name="M:PhotoSite.WebApi.Controllers.Admin.SettingController.SetSettings(PhotoSite.WebApi.Admin.SettingsDto)">
            <summary>
            Set settings
            </summary>
            <returns>Settings</returns>
        </member>
        <member name="T:PhotoSite.WebApi.Controllers.Admin.TagController">
            <summary>
            Tags
            </summary>
        </member>
        <member name="M:PhotoSite.WebApi.Controllers.Admin.TagController.#ctor(PhotoSite.ApiService.Services.Interfaces.ITagService,AutoMapper.IMapper)">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:PhotoSite.WebApi.Controllers.Admin.TagController.GetAll">
            <summary>
            Get all tags
            </summary>
            <returns>All tags</returns>
        </member>
        <member name="M:PhotoSite.WebApi.Controllers.Admin.TagController.Update(PhotoSite.WebApi.Photo.TagDto)">
            <summary>
            Update tag
            </summary>
            <param name="tag">Tag</param>
        </member>
        <member name="M:PhotoSite.WebApi.Controllers.Admin.TagController.Create(PhotoSite.WebApi.Photo.TagTitleDto)">
            <summary>
            Create new tag
            </summary>
            <param name="tagTitle">Tag's title</param>
            <returns>Identification new tag</returns>
        </member>
        <member name="T:PhotoSite.WebApi.Controllers.Admin.WatermarkController">
            <summary>
            Watermarks
            </summary>
        </member>
        <member name="M:PhotoSite.WebApi.Controllers.Admin.WatermarkController.#ctor(PhotoSite.ApiService.Services.Interfaces.IWatermarkService,AutoMapper.IMapper)">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:PhotoSite.WebApi.Controllers.Admin.WatermarkController.GetByPhotoId(System.Int32)">
            <summary>
            Get entity by photo's id
            </summary>
            <returns>All tags</returns>
        </member>
        <member name="M:PhotoSite.WebApi.Controllers.Admin.WatermarkController.Update(PhotoSite.WebApi.Photo.WatermarkDto)">
            <summary>
            Update entity
            </summary>
            <param name="watermark">Entity</param>
        </member>
        <member name="M:PhotoSite.WebApi.Controllers.Admin.WatermarkController.Create(PhotoSite.WebApi.Photo.WatermarkDto)">
            <summary>
            Create new entity
            </summary>
            <param name="watermark">Entity</param>
            <returns>Identification new entity</returns>
        </member>
        <member name="T:PhotoSite.WebApi.Controllers.AlbumController">
            <summary>
            Gallery
            </summary>
        </member>
        <member name="M:PhotoSite.WebApi.Controllers.AlbumController.#ctor(AutoMapper.IMapper,PhotoSite.ApiService.Services.Interfaces.IAlbumService)">
            <summary>
            ctor
            </summary>
        </member>
        <member name="T:PhotoSite.WebApi.Controllers.BaseController">
            <summary>
            BaseController
            </summary>
        </member>
        <member name="T:PhotoSite.WebApi.Controllers.PhotoController">
            <summary>
            Photos
            </summary>
        </member>
        <member name="M:PhotoSite.WebApi.Controllers.PhotoController.#ctor(AutoMapper.IMapper,PhotoSite.ApiService.Services.Interfaces.IPhotoService)">
            <summary>
            ctor
            </summary>
        </member>
        <member name="T:PhotoSite.WebApi.Filters.IpFilter">
            <summary>
            IP-filter
            </summary>
        </member>
        <member name="M:PhotoSite.WebApi.Filters.IpFilter.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,PhotoSite.ApiService.Services.Interfaces.IBlackIpService)">
            <summary>
            ctor
            </summary>
            <param name="next"></param>
            <param name="blackListService"></param>
        </member>
        <member name="M:PhotoSite.WebApi.Filters.IpFilter.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Invoke
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:PhotoSite.WebApi.Handlers.CustomTokenAuthHandler">
            <summary>
            
            </summary>
        </member>
        <member name="M:PhotoSite.WebApi.Handlers.CustomTokenAuthHandler.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{PhotoSite.WebApi.Options.CustomTokenAuthOptions},Microsoft.Extensions.Logging.ILoggerFactory,System.Text.Encodings.Web.UrlEncoder,Microsoft.AspNetCore.Authentication.ISystemClock)">
            <summary>
            ctor
            </summary>
            <param name="options"></param>
            <param name="logger"></param>
            <param name="encoder"></param>
            <param name="clock"></param>
        </member>
        <member name="M:PhotoSite.WebApi.Handlers.CustomTokenAuthHandler.HandleAuthenticateAsync">
            <summary>
            Handle authenticate async
            </summary>
            <returns>Authenticate result</returns>
        </member>
        <member name="T:PhotoSite.WebApi.Helpers.MiddlewareExtensions">
            <summary>
            Middleware extensions
            </summary>
        </member>
        <member name="M:PhotoSite.WebApi.Helpers.MiddlewareExtensions.UseIpFilter(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            UseIpFilter
            </summary>
            <param name="builder"></param>
            <returns></returns>
        </member>
        <member name="T:PhotoSite.WebApi.Options.CustomTokenAuthOptions">
            <summary>
            Token auth options
            </summary>
        </member>
        <member name="F:PhotoSite.WebApi.Options.CustomTokenAuthOptions.DefaultSchemeName">
            <summary>
            Default scheme name
            </summary>
        </member>
        <member name="P:PhotoSite.WebApi.Options.CustomTokenAuthOptions.TokenHeaderName">
            <summary>
            Token header name
            </summary>
        </member>
        <member name="T:PhotoSite.WebApi.Program">
            <summary>
            Program
            </summary>
        </member>
        <member name="M:PhotoSite.WebApi.Program.Main(System.String[])">
            <summary>
            Main
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PhotoSite.WebApi.Program.CreateHostBuilder(System.String[])">
            <summary>
            CreateHostBuilder
            </summary>
            <param name="args">Arguments</param>
            <returns></returns>
        </member>
        <member name="T:PhotoSite.WebApi.Startup">
            <summary>
            Startup
            </summary>
        </member>
        <member name="M:PhotoSite.WebApi.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Startup
            </summary>
            <param name="configuration"></param>
            <param name="currentEnvironment"></param>
        </member>
        <member name="P:PhotoSite.WebApi.Startup.Configuration">
            <summary>
            Configuration
            </summary>
        </member>
        <member name="M:PhotoSite.WebApi.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Configure of Services
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:PhotoSite.WebApi.Startup.ConfigureDependencies(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Configure dependencies
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:PhotoSite.WebApi.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Configure
            </summary>
        </member>
    </members>
</doc>
